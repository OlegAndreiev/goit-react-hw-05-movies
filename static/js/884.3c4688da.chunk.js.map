{"version":3,"file":"static/js/884.3c4688da.chunk.js","mappings":"+MAiGA,UA5FqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAGMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAe7C,OAbAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,GAAD,OANU,+BAMV,kBAAsBb,EAAtB,oBALS,mCAKT,oBACFc,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,OAAO,IAAIC,MAAM,6BACjC,IACAC,OAAM,SAAAhB,GAAK,OAAIC,EAAS,CAAED,MAAAA,GAAf,IACXS,MAAK,SAAAQ,GAAI,OAAIlB,EAASkB,EAAb,GACb,GAAE,CAACtB,IAECG,GAIDE,GACFkB,QAAQC,IAAInB,GAGdkB,QAAQC,IAAIjB,IAGV,+BACE,UAAC,EAAAkB,SAAD,CAAUC,SAAU,KAApB,WACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,UAAC,KAAD,CACEC,GAAIlB,EACJmB,MAAO,CACLC,QAAS,OACTC,IAAK,MACLC,MAAO,QACPC,eAAgB,OAChBC,MAAO,QACPC,gBAAiB,WACjBC,OAAQ,mBATZ,WAYE,SAAC,MAAD,IAZF,gBAgBF,UAAC,KAAD,YACE,0BACE,SAAC,KAAD,CACEC,IAAG,yCAAoCjC,EAAMkC,aAC7CC,IAAKnC,EAAMoC,MACXN,MAAM,WAGV,4BACE,wBAAK9B,EAAMoC,SACX,wCAAgBpC,EAAMqC,eACtB,sCACA,uBAAIrC,EAAMsC,YACV,mCACCtC,EAAMuC,OAAOC,KAAI,SAAAxC,GAAK,OACrB,uBAAqBA,EAAMyC,MAAnBzC,EAAMyC,KADO,cAM7B,UAAC,KAAD,qCAEE,2BACE,yBACE,SAAC,KAAD,CAAMjB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAF,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,eA7DD,IAmEV,C,uLC7FYmB,EAAUC,EAAAA,GAAAA,QAAH,mFAKPC,EAAYD,EAAAA,GAAAA,IAAH,wDAKTE,EAASF,EAAAA,GAAAA,IAAH,mFAMNG,EAASH,EAAAA,GAAAA,IAAH,wHAQNI,EAAcJ,EAAAA,GAAAA,GAAH,uR","sources":["pages/MovieDetails.jsx","pages/MovieDetails.styled.js"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { TiArrowBack } from 'react-icons/ti';\nimport { GoBack, MovieInfo, Poster, Section } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '00f2cafab9ed8b61ede4a54c54838e2c';\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n      .then(responce => {\n        if (responce.ok) {\n          return responce.json();\n        }\n\n        return Promise.reject(new Error('Something has gone wrong!'));\n      })\n      .catch(error => setError({ error }))\n      .then(data => setMovie(data));\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  if (error) {\n    console.log(error);\n  }\n\n  console.log(location);\n\n  return (\n    <>\n      <Suspense fallback={null}>\n        <Section>\n          <GoBack>\n            <Link\n              to={backLinkHref}\n              style={{\n                display: 'flex',\n                gap: '5px',\n                color: 'black',\n                textDecoration: 'none',\n                width: '100px',\n                backgroundColor: 'lavender',\n                border: '1px solid black',\n              }}\n            >\n              <TiArrowBack />\n              Go back\n            </Link>\n          </GoBack>\n          <MovieInfo>\n            <div>\n              <Poster\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n                width=\"100\"\n              />\n            </div>\n            <div>\n              <h2>{movie.title}</h2>\n              <p>Popularity: {movie.popularity}</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              {movie.genres.map(movie => (\n                <p key={movie.name}>{movie.name}</p>\n              ))}\n            </div>\n          </MovieInfo>\n        </Section>\n        <Section>\n          Additional information\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n        </Section>\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  border-bottom: 1px solid black;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: 560px;\n  // object-fit: cover;\n`;\n\nexport const GoBack = styled.div`\n  display: flex;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  width: 100%;\n  weight: 50px;\n`;\n\nexport const CastGallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n"],"names":["movieId","useParams","useState","movie","setMovie","error","setError","location","useLocation","backLinkHref","state","from","useEffect","fetch","then","responce","ok","json","Promise","reject","Error","catch","data","console","log","Suspense","fallback","to","style","display","gap","color","textDecoration","width","backgroundColor","border","src","poster_path","alt","title","popularity","overview","genres","map","name","Section","styled","MovieInfo","Poster","GoBack","CastGallery"],"sourceRoot":""}